/**
 * Configuraci√≥n global para Playwright
 * Este archivo se ejecuta una vez antes de todos los tests
 */

import { FullConfig } from '@playwright/test';
import { setupTestEnvironment, cleanupTestEnvironment } from './setup-test-environment';

async function globalSetup(config: FullConfig) {
  console.log('üöÄ Iniciando configuraci√≥n global para tests de Playwright...');
  
  // Verificar si estamos en modo de prueba
  if (process.env.NODE_ENV !== 'test') {
    console.warn('‚ö†Ô∏è NODE_ENV no est√° configurado como "test"');
    Object.defineProperty(process.env, 'NODE_ENV', { value: 'test' });
    console.log('‚úÖ NODE_ENV configurado como "test"');
  }

  // Verificar si PWA est√° desactivado
  if (process.env.DISABLE_PWA !== 'true') {
    console.warn('‚ö†Ô∏è DISABLE_PWA no est√° configurado como "true"');
    process.env.DISABLE_PWA = 'true';
    console.log('‚úÖ DISABLE_PWA configurado como "true"');
  }

  // Verificar que estamos en entorno de prueba
  if (process.env.IS_TESTING_ENVIRONMENT !== 'true') {
    console.warn('‚ö†Ô∏è IS_TESTING_ENVIRONMENT no est√° configurado como "true"');
    process.env.IS_TESTING_ENVIRONMENT = 'true';
    console.log('‚úÖ IS_TESTING_ENVIRONMENT configurado como "true"');
  }

  // Limpiar la base de datos antes de inicializar
  console.log('üßπ Limpiando base de datos antes de inicializar tests...');
  await cleanupTestEnvironment();
  
  // Inicializar entorno de prueba con configuraci√≥n b√°sica
  // Esto crear√° los usuarios pero no los turnos
  // Los turnos se crear√°n en cada test seg√∫n sea necesario
  const setupSuccess = await setupTestEnvironment({
    requireUsers: true,
    requireShifts: false
  });

  if (!setupSuccess) {
    console.error('‚ùå Error al inicializar el entorno de prueba');
    process.exit(1);
  }

  console.log('‚úÖ Configuraci√≥n global completada correctamente');
}

export default globalSetup;